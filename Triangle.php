<?php

namespace Triangle;
include_once 'Shape.php';
use shape\Shape;
class Triangle extends Shape{
    private $side1=1;
    private $side2=1;
    private $side3=1;
    private string $color;
    public function __construct($name,string $color)
    {
        parent::__construct($name);
        $this->color=$color;
    }
    public function setSide($side1,$side2,$side3){
        $this->side1=$side1;
        $this->side2=$side2;
        $this->side3=$side3;
    }

    /**
     * @param string $color
     */
    public function setColor(string $color): void
    {
        $this->color = $color;
    }

    /**
     * @return string
     */
    public function getColor(): string
    {
        return $this->color;
    }
    /**
     * @param int $side1
     */
    public function setSide1(int $side1): void
    {
        $this->side1 = $side1;
    }

    /**
     * @param int $side2
     */
    public function setSide2(int $side2): void
    {
        $this->side2 = $side2;
    }

    /**
     * @param int $side3
     */
    public function setSide3(int $side3): void
    {
        $this->side3 = $side3;
    }

    /**
     * @return int
     */
    public function getSide1(): int
    {
        return $this->side1;
    }

    /**
     * @return int
     */
    public function getSide2(): int
    {
        return $this->side2;
    }

    /**
     * @return int
     */
    public function getSide3(): int
    {
        return $this->side3;
    }
    public function getPerimeter()
    {
         return $this->getSide1() + $this->getSide2() + $this->getSide3();
    }
    public function getArea(){
        $p = ($this->getSide1() + $this->getSide2() + $this->getSide3())/ 2;

        return sqrt($p * ($p - $this->getSide1()) * ($p - $this->getSide2()) * ($p - $this->getSide3()));
    }
    public function show()
    {
        return parent::show()."."."<br> Có màu: ".$this->getColor()."<br>Chu vi là:".$this->getPerimeter()."<br> S là:".$this->getArea(); // TODO: Change the autogenerated stub
    }
}